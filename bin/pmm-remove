#! /bin/sh
#
# Copyright (c) 2021 Víctor Molina García
# MIT License
#


# Pre-configure.
set -e
here=$(readlink -f "$0" | xargs dirname)
name=$(readlink -f "$0" | xargs basename)
alias pmm="sh ${here}/pmm"


# Check number of arguments.
if [ $# -eq 0 ]; then
    echo "E: The ${name} command takes at least one argument"
    exit 1
fi

# Parse arguments.
repo_remove=0
while [ $# -gt 0 ]; do
    case "$1" in
        openssl-1.0.2|openssl-1.1.1)
            rm -r "$(pmm info openssl-root $(echo $1 | cut -d- -f2))"
        ;;
        pyenv)
            rm -r "$(pmm info pyenv-root)"
        ;;
        python-pip|python-setuptools|python-wheel)
            pip uninstall -y "$(echo $1 | cut -d- -f2)"
            rm -rf ${HOME}/.cache/pip /tmp/pip-*
        ;;
        python-cython|python-numpy|python-scipy)
            pip uninstall -y "$(echo $1 | cut -d- -f2)"
            rm -rf ${HOME}/.cache/pip /tmp/pip-*
        ;;
        python-2.*|python-3.*)
            version="$(echo $1 | cut -d- -f2)"
            # Ensure PyEnv is enabled.
            if [ ! -x "$(command -v pyenv || true)" ]; then
                . "$(pmm info pyenv-profile)"
            fi
            # Infer complete Python version if the user only gave major + minor.
            case ${version} in
                2.[67]|3.[23456789])
                    regex=$(echo "^\ \ ${version}.[0-9]\+$" | sed 's|\.|\\\.|g')
                    version=$(pyenv install -l | grep "${regex}" | tail -n1 | xargs)
                ;;
            esac
            # Uninstall the Python version through PyEnv.
            yes | pyenv uninstall ${version}
        ;;
        *)
            # Guess if we have sudo.
            if [ -x "$(command -v sudo || true)" ]; then
                sudocmd=sudo
                ${sudocmd} true
            else
                sudocmd=
            fi
            # Translate specific package names.
            case "$1" in
                gcc-full|pkg-config|blas|lapack|matplotlib-dev|hdf4|hdf5|netcdf4)
                    pkglist="$(pmm info $1)"
                ;;
                pyenv-dev)
                    # findutils cannot be removed.
                    pkglist="$(pmm info $1)"
                    pkglist="$(echo ${pkglist} | sed 's|\(findutils\s\?\)||')"
                ;;
                *)
                    pkglist="$1"
                ;;
            esac
            pkgman=$(pmm system os-package-manager)
            case ${pkgman} in
                apt-get)
                    remove="remove --purge"
                    aptversion=$(apt-get --version | head -n1 | cut -d' ' -f2)
                    case "${aptversion}" in
                        0.[0-6].*)
                            autoremove=
                        ;;
                        *)
                            autoremove="autoremove"
                        ;;
                    esac
                ;;
                yum)
                    remove="remove"
                    autoremove="autoremove"
                ;;
                zypper)
                    remove="remove --clean-deps"
                    autoremove=
                ;;
                *)
                    remove="remove"
                    autoremove=
                ;;
            esac
            if [ ${repo_remove} -eq 0 ]; then
                repo_remove=1
            fi
            pmm update
            ${sudocmd} ${pkgman} ${remove} -y ${pkglist}
            if [ ! -z ${autoremove} ]; then
                ${sudocmd} ${pkgman} ${autoremove} -y
            fi
        ;;
    esac
    shift
done

# Clean if the package manager was used.
if [ ${repo_remove} -eq 1 ]; then
    pmm clean
fi
