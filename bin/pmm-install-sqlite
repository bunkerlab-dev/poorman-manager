#! /bin/sh
#
# Copyright (c) 2021 Víctor Molina García
# MIT License
#


# Pre-configure.
set -e
here=$(readlink -f "$0" | xargs dirname)
name=$(readlink -f "$0" | xargs basename)
alias pmm="sh ${here}/pmm"


# Check number of arguments.
if [ $# -ne 0 ]; then
    echo "E: The ${name} command takes no arguments"
    exit 1
fi

# Define remote url and installation prefix.
version="3.36"
remote="https://sqlite.org/2021/"
pkgname="sqlite-autoconf-$(echo ${version} | tr -d '.')0000"
pkgfile="${pkgname}.tar.gz"
prefix=$(pmm info sqlite-root)

# Raise an error if `g++` is missing.
if [ ! -x "$(command -v g++ || true)" ]; then
    echo "E: Missing g++ in system"
    exit 1
fi

# Install `make` if it is not available.
delete_make=0
if [ ! -x "$(command -v make || true)" ]; then
    delete_make=1
    echo "Installing make..."
    pmm install make 1>/dev/null 2>&1
fi

# Create temporary workspace.
cwd="$(pwd)"
tmpdir="$(mktemp -d)"
tmplog="${tmpdir}/${pkgname}.log"
cd ${tmpdir}
echo "Creating temporary workspace in ${tmpdir}..."

# Proceed with the installation.
echo "Downloading sqlite ${version}..."
wget -q ${remote}/${pkgfile}

echo "Decompressing sqlite ${version}..."
tar -xf ${pkgfile}

# Find out the architecture without relying on the kernel.
arch=$(pmm system os-arch)

# Now go to the config + make + make install.
echo "Configuring sqlite ${version} (arch: ${arch})..."
cd ${pkgname}
./configure --prefix=${prefix} --disable-shared --enable-fts5                 \
            CFLAGS="-fPIC"                                                    \
            CPPFLAGS="-DSQLITE_ENABLE_FTS3=1                                  \
                      -DSQLITE_ENABLE_FTS4=1                                  \
                      -DSQLITE_ENABLE_COLUMN_METADATA=1                       \
                      -DSQLITE_ENABLE_UNLOCK_NOTIFY=1                         \
                      -DSQLITE_ENABLE_DBSTAT_VTAB=1                           \
                      -DSQLITE_SECURE_DELETE=1                                \
                      -DSQLITE_ENABLE_FTS3_TOKENIZER=1" 1>${tmplog} 2>&1

echo "Building sqlite ${version}..."
make -s 1>>${tmplog} 2>&1

echo "Installing sqlite ${version}..."
make -s install 1>>${tmplog} 2>&1

echo "Cleaning up..."
rm -rf ${tmpdir}
cd ${cwd}

# Remove `make` if installed on the fly.
if [ ${delete_make} -eq 1 ]; then
    pmm remove make
fi

echo "Done!"
