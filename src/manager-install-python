#! /bin/sh

set -e
here=$(readlink -f "$0" | xargs dirname)
name=$(readlink -f "$0" | xargs basename)
alias manager="sh ${here}/manager"


# Parse arguments.
if [ $# -ne 1 ]; then
    echo "E: The ${name} command takes one argument"
    exit 1
fi

version="$1"
case ${version} in
    2.6|2.6.*)
        version_openssl=1.0.2
        export GET_PIP_URL=http://molinav.net/hub/python/get-pip-pyopenssl.py
    ;;
    2.7|2.7.*)
        version_openssl=1.1.1
        export GET_PIP_URL=
    ;;
    3.[234]|3.2.*|3.3.*|3.4.*|3.5.[012])
        version_openssl=1.0.2
        export GET_PIP_URL=
    ;;
    3.[56789]|3.5.*|3.6.*|3.7.*|3.8.*|3.9.*)
        version_openssl=1.1.1
        export GET_PIP_URL=
    ;;
    *)
        echo "E: unsupported Python version: '${version}'"
        exit 1
    ;;
esac
package_openssl=openssl-${version_openssl}

# Install PyEnv if not present.
pyenv_profile="$(manager info pyenv-profile)"
if [ ! -d $(manager info pyenv-root) ]; then
    manager install pyenv
fi

# Ensure PyEnv is enabled.
if [ ! -x "$(command -v pyenv || true)" ]; then
    . "$(manager info pyenv-profile)"
fi

# Infer complete Python version if the user only gave major + minor.
case ${version} in
    2.[67]|3.[23456789])
        regex=$(echo "^\ \ ${version}.[0-9]\+$" | sed 's|\.|\\\.|g')
        version=$(pyenv install -l | grep "${regex}" | tail -n1 | xargs)
    ;;
esac

# Install OpenSSL if not present.
delete_openssl=0
if [ ! -d $(manager info openssl-root ${version_openssl}) ]; then
    delete_openssl=1
    manager install ${package_openssl}
fi

# Install a specific Python version.
manager enable ${package_openssl}
export CFLAGS="-I/usr/local/ssl/include"
export LDFLAGS="-L/usr/local/ssl/lib"
PATH="/usr/local/ssl/bin/openssl:${PATH}" pyenv install "${version}"
echo "pyenv shell ${version}" >> ${pyenv_profile}

# Remove Python byte-compiled files.
pydir="$(manager info pyenv-root)/versions/${version}"
find "${pydir}" -type f -name "*.pyc" | xargs rm -rf
find "${pydir}" -type f -name "*.pyo" | xargs rm -rf
find "${pydir}/lib" -type d -name "__pycache__" | xargs rm -rf

# Remove Python test stuff.
find "${pydir}/lib" -type d -name "test" | xargs rm -rf
rm -rf ${pydir}/lib/*/lib-dynload/_test*.so

# Remove Python static stuff.
find "${pydir}/lib" -type f -name "libpython*.a" | xargs rm -rf
rm -rf ${pydir}/lib/*/config-*

# Remove IDLE.
find "${pydir}/bin" -name "idle.*" | xargs rm -rf
find "${pydir}/lib" -type d -name "idlelib" | xargs rm -rf
find "${pydir}/lib" -type d -name "turtledemo" | xargs rm -rf
rm -f ${pydir}/lib/*/turtle.py

# Remove OpenSSL if installed on the fly.
manager disable ${package_openssl}
if [ ${delete_openssl} -eq 1 ]; then
    manager remove ${package_openssl}
fi
