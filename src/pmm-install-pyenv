#! /bin/sh

set -e
here=$(readlink -f "$0" | xargs dirname)
name=$(readlink -f "$0" | xargs basename)
alias manager="sh ${here}/manager"


# Check number of arguments.
if [ $# -ne 0 ]; then
    echo "E: The ${name} command takes no arguments"
    exit 1
fi

# Guess if we have sudo.
if [ -x "$(command -v sudo || true)" ]; then
    sudocmd=sudo
    ${sudocmd} true
else
    sudocmd=
fi

# Download and install PyEnv.
echo "Downloading PyEnv..."
pyenv_root="$(manager info pyenv-root)"

cwd="$(pwd)"
tmpdir="$(mktemp -d)"
cd ${tmpdir}
wget -q https://github.com/pyenv/pyenv/archive/master.tar.gz -O pyenv.tar.gz

echo "Installing PyEnv..."
tar -xf pyenv.tar.gz && mv pyenv-master "${pyenv_root}"
cd ${cwd}
rm -rf ${tmpdir}

# Fixing missing double quotes for very ancient bash shells.
echo "Patching PyEnv..."
sed -i 's|\(.* =~ \)\((--with-tcltk-libs=.*)\)|\1"\2"|'                       \
    ${pyenv_root}/plugins/python-build/bin/python-build
sed -i 's|\(.* =~ \)\(\^.*\$\)\(.*\)|\1"\2"\3|'                               \
    ${pyenv_root}/pyenv.d/exec/pip-rehash.bash
echo "" > ${pyenv_root}/completions/pyenv.bash

# Remove some unnecessary files.
find ${pyenv_root}                                                            \
    -name ".gitignore" | xargs rm -rf
find ${pyenv_root}                                                            \
    -mindepth 1 -maxdepth 1                                                   \
    -not -regex ".*/\(LICEN[CS]E\)$"                                          \
    -a -not -regex ".*/\(bin\|completions\|libexec\|plugins\|pyenv\.d\)$"     \
    -a -not -regex ".*/\(shims\|versions\)$"                                  \
    | xargs rm -rf
find ${pyenv_root}/plugins/python-build                                       \
    -mindepth 1 -maxdepth 1                                                   \
    -not -regex ".*/\(LICEN[CS]E\)$"                                          \
    -a -not -regex ".*/\(bin\|share\)$"                                       \
    | xargs rm -rf
find ${pyenv_root}/plugins/python-build/share/python-build                    \
    -regex ".*/\(activepython\|anaconda\|graalpython\|ironpython\).*$"        \
    -o -regex ".*/\(jython\|mambaforge\|micropython\|miniconda\).*"           \
    -o -regex ".*/\(miniforge\|pypy\|pyston\|stackless\).*"                   \
    | xargs rm -rf

# Add PyEnv initialisation to profile.
pyenv_profile="$(manager info pyenv-profile)"
${sudocmd} mkdir -p $(dirname ${pyenv_profile})
echo 'Configuring PyEnv...'
{
echo '# Ensure that source command exists.'
echo 'if [ ! -x "$(command -v source || true)" ]; then'
echo '    alias source=.'
echo 'fi'
echo '# Enable PyEnv environment.'
echo 'export PYENV_ROOT="'${pyenv_root}'"'
echo 'export PATH="${PYENV_ROOT}/bin:$PATH"'
echo 'eval "$(pyenv init --path)"'
echo 'eval "$(pyenv init -)"'
echo ''
} | ${sudocmd} tee ${pyenv_profile} >/dev/null

echo "Done!"
